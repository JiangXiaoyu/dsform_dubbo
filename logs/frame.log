2017-08-10 19:26:14 [com.dotoyo.ims.dsform.allin.ITfPreformDao.selectByPrimaryKey]-[DEBUG] ooo Using Connection [com.mysql.jdbc.JDBC4Connection@45312be2]
2017-08-10 19:26:14 [com.dotoyo.ims.dsform.allin.ITfPreformDao.selectByPrimaryKey]-[DEBUG] ==>  Preparing: select ID,NAME,NOTE,THIS_TYPE,PACKAGE,METHOD,TITLE,STATUS,CREATE_TIME,FILE,HTML,MDF_HTML,AUTO_MODEL_ID,MOBILE_MODEL_ID,PRINT_DIRECTION,TOP_MARGIN,LEFT_MARGIN,SN_TYPE,SN_STR_FORMAT,SN_INPUT_ID,REBUILD_VERSION,VIRTUAL_PATH,TOTAL_OF_SUM_TITLE,TOTAL_OF_SUM_SUB_SEC,EXAMPLE_ID,FILL_INSTR_ID ,ITEM_NO from t_f_preform where ID=? 
2017-08-10 19:26:14 [com.dotoyo.ims.dsform.allin.ITfPreformDao.selectByPrimaryKey]-[DEBUG] ==> Parameters: 9f2d3c0ae7e95841e38fdcf47582fe61(String)
2017-08-10 19:26:56 [com.dotoyo.ims.dsform.allin.ITfPreformDao.selectByPrimaryKey]-[DEBUG] ooo Using Connection [com.mysql.jdbc.JDBC4Connection@29526c05]
2017-08-10 19:26:56 [com.dotoyo.ims.dsform.allin.ITfPreformDao.selectByPrimaryKey]-[DEBUG] ==>  Preparing: select ID,NAME,NOTE,THIS_TYPE,PACKAGE,METHOD,TITLE,STATUS,CREATE_TIME,FILE,HTML,MDF_HTML,AUTO_MODEL_ID,MOBILE_MODEL_ID,PRINT_DIRECTION,TOP_MARGIN,LEFT_MARGIN,SN_TYPE,SN_STR_FORMAT,SN_INPUT_ID,REBUILD_VERSION,VIRTUAL_PATH,TOTAL_OF_SUM_TITLE,TOTAL_OF_SUM_SUB_SEC,EXAMPLE_ID,FILL_INSTR_ID ,ITEM_NO from t_f_preform where ID=? 
2017-08-10 19:26:57 [com.dotoyo.ims.dsform.allin.ITfPreformDao.selectByPrimaryKey]-[DEBUG] ==> Parameters: 9f2d3c0ae7e95841e38fdcf47582fe61(String)
2017-09-07 18:51:22 [com.dotoyo.dsform.mongodb.FrameMongodb]-[DEBUG] [Person[id=1,name=null,age=0]]
2017-09-07 18:51:22 [com.dotoyo.dsform.mongodb.FrameMongodb]-[DEBUG] [Person[id=1,name=null,age=0]]
2017-09-08 09:36:45 [com.dotoyo.dsform.mongodb.FrameMongodb]-[DEBUG] [Person[id=1,name=null,age=0]]
2017-09-08 09:36:46 [com.dotoyo.dsform.mongodb.FrameMongodb]-[DEBUG] [Person[id=1,name=null,age=0]]
2017-09-08 09:38:22 [com.dotoyo.dsform.mongodb.FrameMongodb]-[DEBUG] [Person[id=1,name=null,age=0], Person[id=2,name=null,age=0]]
2017-09-08 09:38:23 [com.dotoyo.dsform.mongodb.FrameMongodb]-[DEBUG] [Person[id=1,name=null,age=0], Person[id=2,name=null,age=0]]
2017-09-08 10:06:43 [com.dotoyo.dsform.mongodb.FrameMongodb]-[DEBUG] [Person[id=1,name=null,age=0], Person[id=2,name=null,age=0]]
2017-09-08 10:06:43 [com.dotoyo.dsform.mongodb.FrameMongodb]-[DEBUG] [Person[id=1,name=null,age=0], Person[id=2,name=null,age=0]]
2017-09-08 10:08:52 [com.dotoyo.dsform.mongodb.FrameMongodb]-[DEBUG] [Person[id=1,name=null,age=0], Person[id=2,name=null,age=0]]
2017-09-08 10:08:52 [com.dotoyo.dsform.mongodb.FrameMongodb]-[DEBUG] [Person[id=1,name=null,age=0], Person[id=2,name=null,age=0]]
2017-09-08 10:10:31 [com.dotoyo.dsform.mongodb.FrameMongodb]-[DEBUG] [Person[id=1,name=null,age=0], Person[id=2,name=null,age=0]]
2017-09-08 10:10:31 [com.dotoyo.dsform.mongodb.FrameMongodb]-[DEBUG] [Person[id=1,name=null,age=0], Person[id=2,name=null,age=0]]
2017-09-11 11:42:33 [com.dotoyo.dsform.test.MongoTest]-[DEBUG] 开始启动
2017-09-11 11:42:35 [com.alibaba.dubbo.common.logger.LoggerFactory]-[INFO] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2017-09-11 11:42:36 [com.alibaba.dubbo.common.extension.ExtensionLoader]-[DEBUG]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-09-11 11:42:37 [com.alibaba.dubbo.common.extension.ExtensionLoader]-[DEBUG]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-09-11 11:43:39 [com.dotoyo.dsform.test.MongoTest]-[DEBUG] 开始启动
2017-09-11 11:43:44 [com.alibaba.dubbo.config.AbstractConfig]-[INFO]  [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2017-09-11 11:43:44 [com.alibaba.dubbo.registry.support.AbstractRegistryFactory]-[INFO]  [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2017-09-11 11:44:43 [com.dotoyo.dsform.test.MongoTest]-[DEBUG] 开始启动
2017-09-11 11:48:08 [com.dotoyo.dsform.test.MongoTest]-[DEBUG] 开始启动
2017-09-11 11:50:08 [com.dotoyo.dsform.test.MongoTest]-[DEBUG] 开始启动
2017-09-11 11:53:19 [com.dotoyo.dsform.test.MongoTest]-[DEBUG] 开始启动
